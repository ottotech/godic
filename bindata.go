// Code generated by go-bindata. (@generated) DO NOT EDIT.

//Package main generated by go-bindata.// sources:
// assets/app.js
// assets/index.html
package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// ModTime return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsAppJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\x3c\x7f\x73\xdb\xba\x91\xff\xfb\x53\xec\xb1\x37\x8d\x34\x96\x29\x39\x7d\xe9\xbc\xca\x52\x3a\x89\x93\xf6\x72\x79\xf9\x31\xcf\x7e\xd7\xb9\x71\x3c\x2e\x44\xae\x24\x44\x14\xc0\x02\xa0\x65\xc5\xd5\x77\xbf\x01\x40\x52\x20\x09\xca\xb2\x9c\xf4\x6e\xe6\x38\x9d\x3e\x1b\xc0\x2e\x16\xfb\x7b\x17\x70\x9e\x65\x12\x41\x2a\x41\x23\xf5\xec\xec\xe8\x28\xe2\x4c\x2a\x40\x18\xc3\xaf\x48\x22\x15\x46\x02\x89\xc2\xb7\x09\x2e\x91\x29\x3d\x9f\x10\x29\xe1\x0d\x51\x64\x42\x24\xbe\x63\x53\x0e\x78\xa7\x90\xc5\x32\x07\x38\xe7\xcb\x94\x33\x64\x0a\xee\x8f\x00\x00\x0c\x42\x91\x45\x8a\x8b\x4e\x2a\x78\x2a\xbb\xf9\x84\xfe\x64\x96\x62\x31\x7c\x56\x8e\xaa\x39\x95\xa1\x54\x44\x69\x32\xb6\x8b\xf5\x47\xd9\x94\x0f\x21\x26\x8a\x5c\x05\x2e\x11\xc1\x75\xaf\xb2\x4e\xae\x59\xf4\x8e\xc5\x34\x22\x8a\x8b\xe1\x94\x24\x12\xcb\xf9\x4d\x7d\xa7\x35\x8b\x0a\x5c\x30\x6e\x8e\x85\x13\xca\xe2\x8e\x1e\xce\x69\xdc\x1c\x1d\x15\x7b\x38\x70\x9d\x2e\x8c\x5f\x3a\xe4\x26\xa8\x40\x46\x73\x5c\x12\x18\xc3\x8a\xb2\x98\xaf\xc2\x84\x47\x44\x51\xce\xc2\x54\x70\xc5\x23\x9e\x9c\x55\x96\xcf\xb9\x54\x9e\xc5\x7a\xb8\xba\x10\x59\x9c\x72\xca\xf4\xe2\x7c\x8b\x63\x08\xfa\xfd\x00\x8e\x2d\x0e\xfd\x9b\x26\xef\x24\x9e\x04\x67\x47\x25\x68\xbf\x0f\xbf\xa0\x7a\x26\x41\x2a\x22\x14\xa8\x39\x9a\x43\x50\x36\x03\x5a\x30\x2b\x0c\xc3\x1a\x7b\x50\x5d\x68\x59\x74\xee\xab\x4c\x05\x25\x32\xdc\x74\xb7\xd8\xa7\xa8\xa2\x79\xa7\x20\xad\x57\x93\xdc\x12\xd5\x9c\xc7\x43\x08\x3e\x7f\xba\xb8\x0c\xb6\xd2\xda\x74\x43\x35\x47\xd6\x11\x28\xab\xfc\x7b\x98\x00\x23\xd6\x4d\xb7\xaa\x20\x53\xd0\xa8\x8c\xfa\x64\x12\xc6\xe3\x31\x3c\x1f\x0c\xba\x35\xbc\xfa\x23\x09\x0a\xd5\x09\x2e\xe7\x68\xf4\xc9\x48\x71\x4e\x24\x4c\x10\x99\x61\x0b\xc6\x20\xb3\x28\x42\x29\xa7\x59\x92\xac\xc3\xa0\xdb\xc0\xd1\x90\x94\xc0\x29\x8c\x21\xe8\x07\x8d\xa5\x02\x55\x26\x58\x65\x78\x73\x54\x5d\x20\x43\x85\x77\xaa\x93\x33\xa4\xa3\x7f\xe9\x36\x79\xe2\xd0\xfe\x8a\x01\x0a\xc1\x05\xf0\x28\xca\x84\xc0\xb8\x07\x6b\x9e\x89\xed\x79\x96\x74\x36\x57\xc0\xb8\x82\x09\x16\x67\x8a\xf8\x32\x4d\x50\x61\xb2\x0e\xe1\x73\x82\x7a\x99\xc8\x18\x90\x19\xa1\xac\x54\x09\x98\x66\x2c\xd2\x47\x1a\xc2\x17\xa6\xd5\xca\x10\x73\x56\x25\xbf\xeb\x0a\x31\x22\x5a\xfa\x05\x18\x74\x0c\x61\x75\xbe\x6b\x67\xc0\x13\x0c\x13\x3e\xcb\x17\x9c\x3d\x51\xde\xff\x7a\x4e\xd4\xe9\xde\x54\xbd\x42\x34\xc7\x68\x51\xb8\x85\xf3\x39\x61\x33\xad\xd8\xff\xe7\xbc\x83\x21\xf3\x24\xb2\xf4\xb9\x3e\x62\x4f\x2b\xfe\xeb\xdb\xbd\x8d\x78\x7f\x93\xd4\xab\xbe\x4a\xce\x4a\x13\xd0\xe2\x6b\x31\x81\xba\x3a\x99\xa5\xde\x55\x9a\x25\x0c\x57\x97\x64\x92\x18\x51\xd8\xe8\xc1\x70\x75\xa3\xcc\x50\x70\x7d\xd6\x0a\x17\xa3\x56\x90\xb8\x06\x9b\x8f\xee\x01\x1f\xf1\x24\x5b\xb2\xad\x1a\x58\x78\x3b\x7a\x53\x70\xff\xe1\xfd\xcf\x79\xd2\xdc\xdd\x62\xd9\x09\xce\x70\x55\x01\xd5\x87\x76\xc0\xbc\x70\x5a\x5c\x25\xbb\xc2\x04\xd9\x4c\xcd\x8d\xd0\x06\xf0\xfb\xdf\x7b\x21\xf4\x57\x61\xd4\xde\x50\x15\xf6\x3c\x76\x2f\x7d\xb2\xbd\x61\x72\x4e\x54\xd6\xfb\x54\xb0\xf8\x72\xbf\x52\xc6\xf7\x98\xa3\x34\xee\x63\x4e\x6e\x11\x08\x5b\x43\x2e\xbd\x10\xde\x29\xa0\x12\xb2\xf4\x44\xf1\x93\x98\x28\xf4\x05\x8a\xe2\xb3\x51\xc0\x2f\xb0\x4d\xab\x18\x15\x4f\x3f\xc8\x99\x0e\x2c\xaf\x71\xca\xc5\x36\x6a\x2b\x37\x78\xc9\x48\xf0\x24\x81\x98\xaf\x18\x10\x16\x5b\x4f\x04\x24\x49\x0a\x52\x21\x46\x85\x91\xc2\x18\x26\x6b\x98\xf1\x98\x46\x3d\x2d\xed\x35\xcf\x60\x45\x98\x82\x00\x8e\x5b\x09\x0f\x14\x87\x54\xf0\x08\x31\x86\x15\x55\xf3\xd2\x3f\xce\x05\x67\xf4\x9b\x71\x45\x90\x0a\x94\x12\x3e\xbd\x0f\xe1\x6f\x73\x64\x80\x77\x54\x2a\x4d\x66\xae\x72\x40\x04\x42\x96\x6a\x1e\xc5\x76\x7f\x58\xd1\x24\x01\x81\x4b\x7e\x8b\x0f\x6c\x3f\x47\x8d\xfe\x96\xf2\x4c\x9f\x43\x46\x82\xa6\x7a\x4f\x09\x92\xdc\x6a\x77\x2f\xb9\x8b\x72\xca\x45\x84\xe6\x64\x8a\xe7\x5b\x1a\x8a\x73\x4a\x9e\x55\x71\x84\x5f\xd8\x17\xd6\x0c\xd9\x05\xfb\x97\x86\xf7\x56\x08\xc7\x41\xf0\x18\xbb\x79\xb9\x5b\xcb\x34\xe6\xe3\x31\x04\x5f\xd8\xe5\x1c\x05\x1a\x06\x31\x5c\x81\x75\x2c\x60\x93\xef\x78\xd8\x46\x9c\xfe\xa6\x5c\x40\x47\x53\x49\x61\x0c\x83\x33\xa0\x30\x82\x3a\x19\x67\x40\x8f\x8f\x77\xd1\xe1\xd2\x72\xa2\x05\xb1\x45\x71\x45\xaf\x75\xc0\xd8\x45\x82\x5f\x71\xfd\xa3\x9a\x4b\x5e\x5f\xb1\x37\xa7\x2e\xf8\x12\x0b\x06\x19\x63\x34\x09\x5b\x8e\xf3\xd1\xac\xf2\xd1\x72\x00\xbb\x2a\x68\x7e\x00\xcb\xbc\x8e\xf2\x91\xca\xb5\x4d\x6e\x35\x07\x0b\x9f\x40\x9b\x76\xfa\x68\x26\xfa\xa8\x7b\x0c\x13\xff\x7e\x92\xa3\x80\xce\xbf\xdf\x57\x90\x5d\xd1\xeb\xab\x60\x89\x8a\x68\x2f\x17\x5c\x5f\x05\x8c\x2c\x31\xb8\xde\x74\x35\xdd\x46\x09\x1e\x06\x31\xcb\x6e\x4a\x40\x99\x4d\xa7\x28\x30\x36\xfe\x60\xca\x93\x84\xaf\xcc\xd9\x2d\xf4\xf0\x0b\xf3\xe1\xcb\x67\x6f\x96\x28\x25\x99\x69\x44\x5f\xd8\xdf\xbf\xb7\x41\xb8\x01\xea\x71\xe6\x50\x38\xd8\xef\x66\x0f\x0e\x29\x07\x0b\xd2\x41\x65\x78\xe8\x15\x5d\x7d\x91\x99\xd0\xab\xbe\x27\x7f\x6b\xc1\xff\x00\xa7\x6c\x4c\x46\x7b\xe6\x82\xd3\xae\xd9\x58\x67\x74\x88\x97\x3e\x9c\xcd\x5b\x5a\x34\x17\x73\x54\xed\x6c\x76\x17\x3c\x89\xc5\xad\x41\x72\x6d\xf2\xdb\x88\xb3\x29\x15\xcb\xce\x52\xce\xba\xfe\x2c\x47\xcb\x63\x8d\x72\xd7\x49\x1b\x1d\x98\x4e\x0b\xae\x26\x91\xb5\xea\x70\x03\x98\x48\x6c\xa9\x34\xf6\x2d\xb6\x61\x47\x99\x39\x84\x96\xe2\xd8\x47\xcc\x77\x2d\x97\xcb\xb2\x33\x4f\x47\x04\xb2\x18\x45\xa7\x5b\xab\x31\xcb\xbe\x0e\x8c\x81\x65\x89\x53\x52\x6a\x41\x6c\x3b\x6d\x61\xa5\xd6\xae\x13\xe2\x62\x19\x5d\xb8\x2b\xfb\x2f\x8f\x9a\xe7\xb3\x59\x2e\x74\x2a\x38\x46\x31\xbd\x7d\xd9\xe0\xd1\x7d\x89\xba\x29\xcc\xd1\x24\x53\x8a\x33\xaf\x40\xa4\x5a\x27\x38\xbe\xbf\x5f\xd1\x58\xcd\x87\xf0\xc7\x41\x0f\xa2\x4c\x48\x2e\x86\x10\x98\xca\x15\x45\xd0\x83\x25\x11\x33\xca\x5e\x73\xa5\xf8\x72\x08\xcf\x07\x1b\xbf\x5a\xab\x75\x8a\xe3\xc0\xee\xe6\xb7\x61\xce\xce\x13\x1a\x2d\xc6\xf7\x86\x63\xbe\x1a\xbf\x89\xb9\x79\x58\xfd\x69\xee\x35\x4f\xda\xb7\x9b\x37\x41\x46\x69\x71\x54\xf3\x1f\x19\xa6\x9b\x97\x23\xa9\x04\x67\xb3\x97\x65\x71\xa2\x4d\x7e\x08\xa3\x7e\x3e\x7e\xef\x88\x95\xb2\x29\x2f\x7d\xc2\xa8\x9f\x1e\xb8\x43\x26\x51\xec\xdc\x41\x2f\x78\xd2\x0e\x73\x2e\xd5\xce\x1d\xf4\x82\x27\xed\x10\x0b\x7a\xfb\xc0\x29\xec\x92\x27\xed\x62\x3b\x2e\x3b\x77\xb1\x4b\x9e\xb4\x4b\xca\xc5\x6e\x6e\xe9\x05\xbe\x1d\x46\xfd\x8a\x19\x96\xbd\xab\x4d\xd1\xda\xaf\x58\xf7\x8f\xee\xed\x6b\xc7\x39\x84\xe0\x22\x2f\x67\x8b\x52\xb6\x07\xa9\x6d\xc7\xad\x08\x55\x41\xbd\x5f\x6f\x73\xb1\x4b\xbc\x53\x45\xb7\x7e\x3b\xd2\xd6\xab\x8f\x0a\xca\xdf\xd0\xf8\x03\xcf\x98\xaa\x38\x4a\x89\xea\x9d\xf6\x18\xb7\x24\xe9\xd4\x10\xf6\xe0\xc5\x60\x50\xef\xf0\x39\xfb\xfb\xfa\x7a\x31\xd7\x33\x41\x18\x54\xdb\x72\xca\xa1\xd8\x8a\x4a\x8f\x54\xd7\xd0\xf8\x4e\x2f\xd1\x27\xa1\x2c\xc6\xbb\x4f\xd3\x4e\x10\x06\xdd\xaa\xd7\x36\x8b\xc6\x63\x38\x39\xad\xfb\x69\x0d\x78\x3c\x8e\xb9\xda\x3a\x65\x5f\x04\xcc\x89\x94\xc5\x56\x32\xa1\x11\x6a\xb4\x3d\xf3\xab\x4d\x48\x6a\x01\xcd\xe4\xa9\x5c\x55\x3a\x28\xa7\xf0\xcf\x7f\x42\x7d\xf0\x39\xf8\x62\x7b\x93\xb2\x56\xea\x8a\xe5\x25\x75\xd9\x44\x2a\xd1\x19\xf4\x34\x77\xea\x3d\x68\x4f\xf4\xa9\x35\x91\x8d\x8e\xe9\xff\xcb\xc3\xf1\xa6\x35\x5e\xfa\xc3\xd6\xfc\xd4\x13\xb5\x6a\x42\xdc\xd4\x6c\xcc\x85\xe9\xd6\x2d\xcc\x16\x89\xda\x94\xff\xa5\x57\x67\x79\x96\x0a\x57\xce\x55\x59\xdd\xb4\x78\x5e\xf4\x9c\x9b\xcc\xf2\x0d\xca\xa8\x50\xd8\xe6\x4c\xc3\xd4\x1a\x58\xcc\x41\x7d\x48\xca\x89\xc3\xcc\xd5\x18\x53\xb5\x23\x7b\xd9\xe8\xc4\x6e\xbb\xaf\xdb\x55\xe7\x9e\xd6\x67\x99\x99\x7f\xb5\x99\xf9\x57\x18\xe5\xc8\xcb\xc4\xfc\x6b\x33\x31\xcf\xb1\x6b\xd4\x57\xd7\xd5\xa4\xb8\xbd\x40\x7e\x30\xd5\xdf\x56\xfa\x4e\xa6\x9e\x57\xae\xc6\xb6\x2c\x61\x57\x5f\xcb\x34\xbf\x2d\x8d\xd6\xb4\x85\x69\x26\xe7\x0e\xbe\x66\x57\x72\x53\xb3\xa5\xca\xaf\xfd\x3e\xac\x74\xcd\xa3\x2b\x65\x0e\x92\xe7\x17\x86\xe6\xd4\x24\x8a\xb8\x88\x29\x9b\x25\xeb\x9e\x19\x15\x59\x82\x40\x25\xa8\x39\x51\x75\x2c\x7a\xfe\xf3\x7b\xdb\x97\x9b\x71\xc8\xef\x56\xa6\x54\x48\x05\x69\x42\x22\x34\xdd\xca\xbf\xbc\x97\x45\xeb\x4e\x97\xe4\x3d\x1f\x16\x81\x52\x01\x9f\xba\x9d\xbc\x12\x2d\x99\x2a\x14\x2b\x22\x62\x19\x36\x24\x95\x2e\xde\x19\xbf\x5a\xbd\x07\x2e\x66\xa7\x0b\x69\xa7\xaf\xae\xfd\x82\x5c\x59\x41\xae\xac\x20\xb7\x52\x5c\xed\x94\xa2\xbc\x5a\x5d\x5f\x05\x54\xde\xa4\x82\x2e\x89\x58\xdf\x2c\x70\x5d\x88\x51\x64\xd8\x26\xb9\x82\xd6\x55\x53\x5a\xd6\x59\xd6\xd1\x4f\xb9\x40\x3a\x63\x7b\xa2\xb7\x87\xb5\xaa\xb1\x7a\xa4\x46\x98\x8a\x61\x9d\x22\x9f\x16\x54\x8e\xc7\x10\xb0\x6c\x39\x41\x11\xf8\x36\xb4\xbc\xff\x34\xf9\x6a\x2a\xc3\x44\x86\x32\x35\x91\xc6\x40\xf7\xe0\xb4\x7b\x35\xb8\x6e\x00\xb9\x0b\x07\x3d\x18\xf4\x2c\x8a\x7a\x2d\xe5\x17\xd5\x37\x2b\xaa\x6f\x30\x2a\x4e\x5a\x08\xeb\x9b\x5f\x58\x56\x01\x9a\x24\x5a\xe8\xab\x6f\xd7\xfb\x90\x79\x6a\xc8\x9c\x3e\x48\x66\xbf\x0f\x53\xca\x48\x92\xac\xb5\x69\x25\x9c\xa7\xe5\x65\xa3\xe0\xd9\xcc\x36\xd5\x6d\xcd\x5e\xb6\xcc\xcb\x46\x3e\x9d\x9a\x6b\x87\x39\x91\x40\xe0\xed\xc7\xdf\x3e\x98\xb2\x25\xac\x6f\xf0\x6e\x0a\x92\xf7\x5c\xd3\xb5\x5d\x64\x20\x10\x65\x52\xf1\xa5\xdb\xf9\x36\x8c\xd3\x36\x9b\xef\x17\xfa\xb9\xba\xb0\x5c\x5d\xd4\x0d\x60\xf1\x80\x01\x2c\xae\xaf\x82\x39\x91\x37\xc8\xb2\xe5\x6e\x5f\x65\x96\xc6\x93\x1b\x7d\x24\xad\xc5\x10\xe8\x13\x76\x02\x80\xe3\xed\xbc\x46\x73\x73\x4b\x92\x4c\x7b\xfa\xf0\x2b\xa7\xac\xd3\x85\x63\x08\xba\xcd\x9a\x6d\xa7\x1e\x3b\x5e\xb4\xbc\x0c\xcb\xc5\x7f\xe4\x01\xa9\xe7\x13\x36\x8e\xda\xff\x54\x73\x0a\x7b\xd1\x60\xa3\x1b\x35\x85\x3d\x11\x6b\x9d\x24\xa2\x27\x4b\x34\x08\xac\xad\x63\xa8\x88\x98\xa1\x0a\x67\xa8\x5e\x29\x25\xe8\x24\x53\xd8\x09\x74\xd0\x3a\x31\xcb\x4e\x68\x7c\xe7\x66\x81\x25\xfc\x47\xb2\xc4\xbd\x10\x98\x70\x51\xc3\xf0\xbf\x79\xff\x6c\x59\x55\xcf\x90\x8d\xea\x57\x53\x64\x2b\xab\x82\x59\xad\x01\xde\x2c\x70\xe4\xe9\x5d\x67\x72\x2e\xed\xe7\x7d\x6f\x62\x88\x5c\x18\xfb\xd3\x95\xac\x56\xe1\x39\xf6\xa5\x89\x39\xd6\x5e\x09\x53\xb2\x76\x99\xa4\xd9\x0b\xf1\x56\xd0\x79\x64\x32\xa4\x84\x95\xfd\xab\xcd\xb1\xe0\x95\xb0\x77\x53\x32\xcb\x7f\x30\xd7\x6f\x35\xe4\x55\xbc\x86\x33\xa6\xd7\x54\x8a\xfd\x38\xf8\xb3\x73\xd3\xa8\x8d\xee\xdf\x3c\x8d\xb5\xda\xbb\x93\x8d\x27\xf3\x79\x5c\xa2\x92\xf3\x53\xe7\x97\x9b\x5a\xb7\x2a\x31\x02\xb8\xa1\x71\x61\x4f\x65\x26\xa3\x87\xce\x9a\xab\x1d\x57\xd4\x00\xa9\xcc\x35\x60\x0b\x71\x96\x49\x4e\xd7\x7b\xc4\x83\x9e\x24\xe9\x6f\xc2\xe3\xf5\x10\xfe\xf3\xe2\xd3\xc7\x50\x2a\x41\xd9\x8c\x4e\xd7\x1d\x4f\x9d\x62\x32\x34\x1a\x0f\x0b\x05\xd4\x07\xed\xb5\x2c\x73\x4e\x54\xae\xaf\x9c\xb2\x09\x98\x9f\xf4\x46\xab\xda\xd0\x3d\x77\xd5\xbf\x55\x5e\xe2\x7c\x8f\x97\x18\x79\xbf\x73\xab\x76\xae\xde\x41\xb0\xbd\x4b\x2a\xae\x73\x77\xbd\x94\xfa\xff\xd0\x85\xb5\x3a\xe7\xab\x7c\x7e\x9c\xf3\x97\x3e\x57\xe9\xd4\x62\x35\xd7\xd9\x34\xb7\x72\x6b\x13\x54\xeb\x55\x64\x2d\xe2\xb5\x1c\xb5\x52\x2a\xfe\x90\xb3\x46\x3c\x79\x18\x3a\xe2\xc9\xf7\xe3\x53\x19\x45\xae\xec\xde\xdf\x99\x75\xa6\xf5\x60\x2b\x56\x5f\xff\xa1\x41\x6a\xb8\x24\x69\xa7\x63\x7e\xee\x01\xd5\x1c\xae\xb6\x1b\x0c\xaa\x86\xde\x2f\x70\x3d\xbe\xa7\xcd\xb6\x74\x71\xce\xf6\x49\x6d\xe5\xe3\xfb\xdc\x41\xe5\xad\xe3\x16\x34\x6f\xca\x75\xda\xf1\xb5\xac\x7a\xb3\xe5\x5d\xb9\xbc\xc2\xcf\x16\xb8\xbc\x5c\x2f\x61\x4a\xb1\x34\xd7\x37\xb5\x31\x6f\xd5\x37\x27\xda\x81\x4b\xab\xad\xc1\x96\xe3\x5e\xd0\x84\x46\x8b\x0b\x72\x8b\x39\x90\x37\x07\xac\x02\xf6\x9b\xcd\xa1\xc7\xb5\xa4\xfc\x37\x29\x66\xfb\x8a\x6e\x79\xae\x54\x2e\x79\xfa\x5a\xb1\xfe\x23\x9b\xc2\x06\x61\x5b\xb7\xea\xde\xa5\xfe\xbc\xcc\xc8\xea\x9d\x51\x57\xbb\x4d\xdb\x2a\x74\x85\x6c\x75\x3c\xe2\x49\xae\xe1\x70\x7f\xd4\xc8\x3a\x16\xa8\x93\xe9\x20\x68\xc4\x34\x93\x4b\xd4\x2b\x6d\x5f\x58\xcb\x31\x7c\x7e\x1f\xf8\x02\x94\x8b\xaa\x52\x55\xef\x40\xf5\x97\x3a\xaa\x26\xd9\xf1\xe4\x72\x9d\xa2\xcd\x6e\x9c\x22\xc7\x7f\x8a\x72\x3a\x54\xfc\xb7\x34\x45\x71\x6e\xee\x3f\x6d\xa9\xfd\x5f\xaf\x7e\x3d\xff\x8f\x57\xbf\x7a\x6b\xed\x72\x97\xfc\x87\x63\x08\x3a\x81\xad\x9e\xae\x02\x9b\xce\x05\xd7\xbe\x6a\x69\x73\xd4\x24\x99\x65\x49\x92\xe7\xe2\x06\xbe\xf8\xdd\x69\x30\xc0\x9f\x21\xf8\xef\xb7\x17\x01\x0c\x21\xf8\xf8\x29\x68\xe2\xc8\x18\xfd\x47\x56\x62\xa0\xf2\xc6\x0e\xec\x8b\xc2\xaa\x4b\xa7\xa9\xc1\x4a\x14\xae\xcd\x7f\xc1\x36\x52\x71\xed\x02\xc5\xe8\xd9\xe6\xe5\xfd\x02\xd7\x9b\x51\x5f\xc5\x8f\x85\xb3\x2c\x28\xae\xd0\x1e\x0f\x6f\x25\x72\x10\x68\xc1\xf8\x83\x80\x2d\xc3\x77\x83\x7a\xc7\xf5\xb7\x8d\xc9\x63\xcb\x80\xca\x33\x9a\xdd\x60\xd6\x51\x9f\xd0\x38\x07\xf5\xc7\x86\xe2\xf3\x11\xef\x5d\xec\x3f\x84\x3d\x08\xde\x29\x22\x90\xb4\xae\xa8\x1e\x49\xa7\x0a\xb9\xbf\x76\x5c\xd1\xbb\xf8\xae\x9d\x4a\x38\x9c\x27\xe0\xf0\x65\x5f\xa6\xd4\x60\xfc\xd1\xda\xfd\x8a\x60\x55\x39\xd6\x3e\xd1\xcf\xfd\x04\x5f\xc9\x71\xf0\xa2\xfd\x1d\x0b\xe4\xfd\x9a\x71\xf0\x62\xb0\x7b\x95\xc9\x8b\xf2\xa3\x3e\x10\xec\x8b\xaf\xdf\xa2\xa5\x5e\xfd\x1d\xf5\x95\xa8\x8e\xba\x45\xd0\xa1\x61\xb5\x7c\x57\x60\x5f\x0e\x5c\xf2\x74\x08\x2f\x06\x1b\x8f\xab\xd9\x75\x4d\x6b\xc2\x65\xe3\x7a\xd6\xd1\x34\x9d\x61\x1d\x70\xfb\xeb\xd4\x8f\x25\x6e\x3f\x16\xf7\x28\x31\x95\x69\x42\xd6\x43\x08\xa6\x09\xde\x05\xbe\xc3\xc0\x5e\x36\xf4\x24\xfb\xd9\xa9\x9f\x3b\x32\xac\x52\x64\x46\x35\x7f\x6a\x57\x3a\xab\x96\x3f\xef\x50\xcb\x5c\x25\xeb\x64\x3b\x6c\xf5\x6f\xdf\xa6\x97\x3b\x9e\xa7\xc0\x9e\x4f\x54\x5a\x1e\xa4\xc0\x5e\x8f\x52\xa0\x2a\x13\x66\xd3\x76\x9f\xaa\xfd\x30\x91\x3a\x8f\x62\x4a\x89\x16\x09\xf1\x63\x9d\xb8\x24\xb7\xcd\x2a\x06\x76\xbf\x8e\xe9\x7b\x53\xe1\x91\xed\x5b\x78\xa3\x62\x8b\xee\xcf\x91\xb4\x06\x49\xb1\x2b\xf0\xcc\xfd\xdb\xbc\xc7\xf5\xa8\xaf\xe6\x07\x40\x96\x95\xed\x81\xf0\xa6\xc9\xa9\x13\x8e\x03\xe1\x3f\xe6\x29\xc7\x81\xe0\xbf\x99\xa4\xe3\x50\xda\xb7\xa6\xd8\x8e\xa1\xe9\xf9\x9d\x99\x5d\x72\x9c\xf0\x78\xdd\x4e\x94\x53\x3f\x15\x55\x8c\xaf\x82\xca\xf7\xf1\xe3\x1a\xf5\xcd\x41\xf6\xae\xae\x8a\xf2\xca\x14\x65\x8f\x7e\x0d\xf0\x84\xc7\x00\x13\xc5\x6e\xf2\xb8\x70\x63\x44\x30\x84\x80\x71\x86\xf5\x2e\xa8\x62\x37\x3c\x25\x11\x55\xeb\x21\x0c\xc2\x9f\xb6\x11\xb6\xb6\xcb\x9c\xb0\x38\xc1\x0b\xfb\x17\x28\xe3\xe6\xd8\x23\x2e\xfa\xb7\x84\xe6\x37\x0d\x24\x8e\xdf\xde\x22\x53\xbf\x50\xa9\x90\xa1\xe8\x3c\xb3\x7f\xe9\xf2\xac\xd7\xdc\xa7\x05\xfb\xdf\x68\x92\xfc\xc6\x96\x8d\x97\x04\xf9\x0e\xf6\x0f\x50\x0e\xdc\xc4\x9d\x69\x3c\x53\xd0\x6a\x62\xa7\x3e\x73\xf3\x0e\x81\x47\xd9\x12\x99\x0a\xf5\x44\x68\xb7\xb8\xe4\x69\xb5\x69\x15\xf3\xc8\x0b\x53\xfc\x90\xff\x35\xb6\x0f\x5c\xd7\x91\xd5\x3d\x5f\xc2\xf3\x81\x7d\xa6\x13\x55\x07\xbb\x3b\xff\xd4\xd6\xab\x21\x93\x84\x47\x8b\xa0\xd2\x6e\xf6\x74\x76\xf7\xc1\xf4\x51\xeb\x5a\x05\xd1\x03\x19\x9b\xfd\xbb\x74\xeb\x2d\xcc\xd5\x83\x73\x85\x53\xf8\x10\x9e\xde\x4c\x14\x6b\xe8\x7a\x99\xff\x38\x8d\xb5\x06\x4d\x55\xbd\x4f\xb9\xa4\xb6\x4d\x1f\x4c\xe9\x1d\xc6\x8d\xcb\x81\xe2\x41\x69\x75\x5c\xd0\xd9\x5c\x0d\xe1\x0f\xb5\xe1\x6f\xef\x58\x8c\x77\x43\xf8\xd3\x9f\xaa\xe3\x53\xce\xd4\x05\xfd\x86\x43\x38\xfd\xb9\xbe\x81\x88\x51\xf8\x6d\x92\x67\x2a\xa1\xac\xc5\x60\x23\x9e\x98\xfc\x62\x26\x70\x5d\x9f\x6a\x3c\x8f\xad\x1e\x99\xc4\x31\x65\xb3\x21\x9c\xbe\xf0\xd1\xf2\x2b\x89\x69\x26\x87\xf0\x53\x8d\x98\xc2\x39\xd4\x78\x9b\x8f\xbb\xfe\xe2\xe1\xe4\xdb\xe3\x4f\x1f\x7e\x01\x5c\x15\x7e\xcb\xdf\x00\xc4\xe3\x60\xb9\x7e\xad\x1e\x7a\xdc\x9b\xb7\xac\xf6\xb0\x38\x18\xc3\x00\x5a\x92\x37\xce\x3e\xf0\x4c\xe2\xa7\x5b\x14\x05\x4a\x9f\x49\x38\x7e\xf5\x67\xd8\x74\x5b\x5e\xdc\x17\xc8\x32\xb5\x27\xae\x9f\xfc\xb8\xfc\x71\xef\xaf\x1c\x94\xfe\x5f\xea\x89\x64\xbe\x9c\xab\x1e\xca\xdc\x48\x56\x33\x50\x33\x95\x0e\x1d\x5b\xb4\x25\xd5\x10\x06\x16\xca\x2a\x92\xb2\xa5\xd2\x76\x55\xa9\xfa\xa7\xe9\x1d\x48\x9e\xd0\x18\x26\x09\x89\x16\x81\x0b\xa5\x53\xc5\xd7\x8a\x0d\x2b\x0e\xc2\x6a\xfe\x6a\x4e\x95\x6b\x15\xa5\x5e\x07\xa7\x2f\xd2\x3b\xf8\xc3\xf3\xf4\xce\x99\xd5\x35\xcf\xab\x84\xce\xb4\xa5\x47\x58\x33\x0b\xc7\x3e\xff\xb8\x1d\xdd\x61\x47\x13\x12\x2d\x66\x82\x67\x2c\x3e\xcf\xa9\xf9\xdd\x60\xf0\xf3\xf9\xeb\x57\xce\x1a\xcb\x85\x5f\x70\xaa\x1d\xc5\x76\xb8\x66\xd5\x5b\xc6\x5a\xbe\xc6\x7c\x79\xce\x99\x22\x94\xa1\x70\x43\xc2\x3f\x32\x14\xeb\x0b\x4c\xd0\xa4\x05\xcf\x7e\x17\x3b\xff\x26\xc6\xb3\xee\x99\x07\xfa\x72\xc5\x77\x21\x50\xe5\xe3\x44\x0d\x6e\x32\x91\x37\x9f\x3e\xe4\x69\x51\x07\x3b\xee\x3f\xba\xd1\xed\x55\x30\x7b\xd7\x6f\x1f\x3b\xd6\x56\x5f\xae\x78\xf7\xec\xe8\x7f\x02\x00\x00\xff\xff\x0e\x76\x37\xec\x7e\x44\x00\x00")

func assetsAppJsBytes() ([]byte, error) {
	return bindataRead(
		_assetsAppJs,
		"assets/app.js",
	)
}

func assetsAppJs() (*asset, error) {
	bytes, err := assetsAppJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/app.js", size: 17534, mode: os.FileMode(420), modTime: time.Unix(1592493798, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x93\x4f\x6b\xdc\x30\x10\xc5\xef\xfa\x14\x53\xdd\x6d\x25\x14\x42\xd9\xc8\x26\xd0\xb4\xd0\x53\x73\x48\x0f\x3d\xca\xd2\xac\x57\xa9\xfe\x21\xcd\x2e\xbb\x18\x7f\xf7\x62\xab\x09\x2d\xdd\x74\x0f\xcd\xc9\x48\x33\xef\xf7\xe6\x0d\x96\x7c\x77\xff\xf5\xe3\xe3\xf7\x87\x4f\xb0\x23\xef\x7a\x26\x97\x0f\x38\x15\xc6\x8e\x63\xe0\xcb\x05\x2a\xd3\x33\x00\x00\xe9\x91\x14\xe8\x9d\xca\x05\xa9\xe3\xdf\x1e\x3f\x37\x1f\xf8\xaf\x12\x59\x72\xd8\x8f\xd1\x58\x2d\x45\x3d\x30\x29\xaa\x56\x0e\xd1\x9c\x7a\xc6\xa4\xb1\x07\x28\x74\x72\xd8\x71\xaf\xf2\x68\x43\xe3\x70\x4b\x1b\xb8\xbe\x4a\x47\x0e\xd6\x74\xdc\x28\x52\x83\x2a\xf8\x25\x6c\x23\xef\xa5\x30\xf6\xd0\x9f\xd3\x51\x4c\x1b\x78\x7f\x95\x8e\xb7\xf0\x0a\x89\xd4\xe0\xb0\xdc\x2b\x52\x2f\x1c\x26\x8b\xce\x36\x51\x1d\xd9\x21\xc1\x62\x07\x1d\x4c\x53\x3b\xcf\xb7\x4c\x8a\xe7\x3a\x9b\x26\xb0\x5b\x68\x1f\x72\x34\x7b\x4d\x36\x86\x79\xae\x39\x6b\x07\x94\xac\x3b\x9e\x51\x69\x6a\x74\xf4\xc9\x3a\x34\x62\x3d\xb6\xe9\x45\xd2\x7a\x1b\xda\xa7\xb2\xd8\xff\xee\x7b\x11\xd1\x98\xe8\xff\x0f\xa3\x52\x3a\xa3\x9a\x26\x74\x05\xcf\x05\xd9\x11\xa5\xb2\x11\x62\x1f\xd2\x8f\xb1\xd5\xd1\xd7\x41\xee\xae\x6f\xc4\xde\x3f\x07\x33\x78\x40\x17\x93\xc7\x40\x0b\x18\x74\x8e\xa5\xc4\x6c\x47\x1b\xfe\x35\xda\x2b\xec\x25\xe4\x1f\xfc\x35\xf5\x9b\x79\x0c\x6a\x40\xd7\x14\x52\xc1\x28\x17\x03\xde\xdd\xd4\xab\x0b\xcb\xa4\x53\xc2\x8e\x13\x1e\xa9\xb6\xf3\xca\x17\x4f\x65\xdd\xe9\x5f\xfb\x0c\x66\x9e\x19\x93\xa2\xfe\xe0\x52\xac\x6f\xe8\x67\x00\x00\x00\xff\xff\xac\x6e\x73\x72\x53\x03\x00\x00")

func assetsIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsIndexHtml,
		"assets/index.html",
	)
}

func assetsIndexHtml() (*asset, error) {
	bytes, err := assetsIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/index.html", size: 851, mode: os.FileMode(420), modTime: time.Unix(1592077244, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/app.js":     assetsAppJs,
	"assets/index.html": assetsIndexHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"app.js":     &bintree{assetsAppJs, map[string]*bintree{}},
		"index.html": &bintree{assetsIndexHtml, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
